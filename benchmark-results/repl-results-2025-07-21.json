{
  "timestamp": "2025-07-21T08:14:25.939Z",
  "type": "repl-benchmarks",
  "git_commit": "053d8d92ed9d8e2282c3d917b9e7ec726d621bb4",
  "results": [
    {
      "scenario": "interactive-basic",
      "totalTime": "2.3",
      "commandCount": 5,
      "min": "0.1",
      "max": "1.3",
      "avg": "0.5",
      "median": "0.2",
      "measurements": [
        {
          "input": "1 + 2",
          "duration": 0.157765,
          "output": "Type expressions or definitions. Use Ctrl+C to exit."
        },
        {
          "input": "let x = 10",
          "duration": 1.332294,
          "output": "➡ 3 \t : Int"
        },
        {
          "input": "x * 2",
          "duration": 0.06511,
          "output": ""
        },
        {
          "input": "\"hello\" ++ \" world\"",
          "duration": 0.248008,
          "output": ""
        },
        {
          "input": "[1, 2, 3] |> map(\\n -> n * 2)",
          "duration": 0.481319,
          "output": ""
        }
      ]
    },
    {
      "scenario": "interactive-complex",
      "totalTime": "1.5",
      "commandCount": 6,
      "min": "0.0",
      "max": "0.9",
      "avg": "0.2",
      "median": "0.1",
      "measurements": [
        {
          "input": "let factorial = \\n -> if n <= 1 then 1 else n * factorial(n - 1)",
          "duration": 0.127911,
          "output": "Type expressions or definitions. Use Ctrl+C to exit."
        },
        {
          "input": "factorial(5)",
          "duration": 0.870509,
          "output": ""
        },
        {
          "input": "let compose = \\f g x -> f(g(x))",
          "duration": 0.110345,
          "output": ""
        },
        {
          "input": "let double = \\x -> x * 2",
          "duration": 0.250628,
          "output": ""
        },
        {
          "input": "let increment = \\x -> x + 1",
          "duration": 0.030184,
          "output": ""
        },
        {
          "input": "compose(double, increment)(5)",
          "duration": 0.092048,
          "output": ""
        }
      ]
    },
    {
      "scenario": "interactive-state",
      "totalTime": "3.5",
      "commandCount": 6,
      "min": "0.1",
      "max": "1.0",
      "avg": "0.6",
      "median": "0.7",
      "measurements": [
        {
          "input": "let users = [{name: \"Alice\", age: 30}, {name: \"Bob\", age: 25}]",
          "duration": 0.05999,
          "output": "Type expressions or definitions. Use Ctrl+C to exit."
        },
        {
          "input": "let getNames = \\users -> users |> map(\\u -> u.name)",
          "duration": 1.008857,
          "output": ""
        },
        {
          "input": "getNames(users)",
          "duration": 0.674096,
          "output": ""
        },
        {
          "input": "let addUser = \\user users -> users ++ [user]",
          "duration": 0.561424,
          "output": ""
        },
        {
          "input": "let newUsers = addUser({name: \"Charlie\", age: 35}, users)",
          "duration": 0.812814,
          "output": ""
        },
        {
          "input": "getNames(newUsers)",
          "duration": 0.361631,
          "output": ""
        }
      ]
    }
  ]
}