# Medium benchmark - recursive list operations

# Test data and operations
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
doubled = map (fn x => x * 2) numbers;
# Handle Option Float from division safely
evens = filter (fn x => 
  match (x / 2) with (
    Some half => half * 2 == x;
    None => False
  )
) numbers;
sum = reduce (fn acc x => acc + x) 0 numbers;

{@doubled doubled, @evens evens, @sum sum}