# Trait System Demo - Multi-line Version

constraint Show a ( show: a -> String );

implement Show Int ( show = toString );

constraint Functor f ( map: (a -> b) -> f a -> f b );

implement Functor Option ( map = fn f opt => match opt with ( Some x -> Some (f x); None -> None ) );

print "=== Trait System Working ===";

# Basic trait function dispatch
result1 = show 42;
print result1;

# Functor map demo  
increment = fn x => x + 1;
result2 = map increment (Some 1);
print "map increment (Some 1):";
print result2;

result3 = map increment None;
print "map increment None:";
print result3;

print "=== Multi-line parsing works! ===";