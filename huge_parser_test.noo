# Large parser stress test

type Type0 = Variant0_0 | Variant0_1 | Variant0_2 | Variant0_3 | Variant0_4 | Variant0_5 | Variant0_6 | Variant0_7 | Variant0_8 | Variant0_9;
type Type1 = Variant1_0 | Variant1_1 | Variant1_2 | Variant1_3 | Variant1_4 | Variant1_5 | Variant1_6 | Variant1_7 | Variant1_8 | Variant1_9;
type Type2 = Variant2_0 | Variant2_1 | Variant2_2 | Variant2_3 | Variant2_4 | Variant2_5 | Variant2_6 | Variant2_7 | Variant2_8 | Variant2_9;
type Type3 = Variant3_0 | Variant3_1 | Variant3_2 | Variant3_3 | Variant3_4 | Variant3_5 | Variant3_6 | Variant3_7 | Variant3_8 | Variant3_9;
type Type4 = Variant4_0 | Variant4_1 | Variant4_2 | Variant4_3 | Variant4_4 | Variant4_5 | Variant4_6 | Variant4_7 | Variant4_8 | Variant4_9;
type Type5 = Variant5_0 | Variant5_1 | Variant5_2 | Variant5_3 | Variant5_4 | Variant5_5 | Variant5_6 | Variant5_7 | Variant5_8 | Variant5_9;
type Type6 = Variant6_0 | Variant6_1 | Variant6_2 | Variant6_3 | Variant6_4 | Variant6_5 | Variant6_6 | Variant6_7 | Variant6_8 | Variant6_9;
type Type7 = Variant7_0 | Variant7_1 | Variant7_2 | Variant7_3 | Variant7_4 | Variant7_5 | Variant7_6 | Variant7_7 | Variant7_8 | Variant7_9;
type Type8 = Variant8_0 | Variant8_1 | Variant8_2 | Variant8_3 | Variant8_4 | Variant8_5 | Variant8_6 | Variant8_7 | Variant8_8 | Variant8_9;
type Type9 = Variant9_0 | Variant9_1 | Variant9_2 | Variant9_3 | Variant9_4 | Variant9_5 | Variant9_6 | Variant9_7 | Variant9_8 | Variant9_9;
type Type10 = Variant10_0 | Variant10_1 | Variant10_2 | Variant10_3 | Variant10_4 | Variant10_5 | Variant10_6 | Variant10_7 | Variant10_8 | Variant10_9;
type Type11 = Variant11_0 | Variant11_1 | Variant11_2 | Variant11_3 | Variant11_4 | Variant11_5 | Variant11_6 | Variant11_7 | Variant11_8 | Variant11_9;
type Type12 = Variant12_0 | Variant12_1 | Variant12_2 | Variant12_3 | Variant12_4 | Variant12_5 | Variant12_6 | Variant12_7 | Variant12_8 | Variant12_9;
type Type13 = Variant13_0 | Variant13_1 | Variant13_2 | Variant13_3 | Variant13_4 | Variant13_5 | Variant13_6 | Variant13_7 | Variant13_8 | Variant13_9;
type Type14 = Variant14_0 | Variant14_1 | Variant14_2 | Variant14_3 | Variant14_4 | Variant14_5 | Variant14_6 | Variant14_7 | Variant14_8 | Variant14_9;
type Type15 = Variant15_0 | Variant15_1 | Variant15_2 | Variant15_3 | Variant15_4 | Variant15_5 | Variant15_6 | Variant15_7 | Variant15_8 | Variant15_9;
type Type16 = Variant16_0 | Variant16_1 | Variant16_2 | Variant16_3 | Variant16_4 | Variant16_5 | Variant16_6 | Variant16_7 | Variant16_8 | Variant16_9;
type Type17 = Variant17_0 | Variant17_1 | Variant17_2 | Variant17_3 | Variant17_4 | Variant17_5 | Variant17_6 | Variant17_7 | Variant17_8 | Variant17_9;
type Type18 = Variant18_0 | Variant18_1 | Variant18_2 | Variant18_3 | Variant18_4 | Variant18_5 | Variant18_6 | Variant18_7 | Variant18_8 | Variant18_9;
type Type19 = Variant19_0 | Variant19_1 | Variant19_2 | Variant19_3 | Variant19_4 | Variant19_5 | Variant19_6 | Variant19_7 | Variant19_8 | Variant19_9;
type Type20 = Variant20_0 | Variant20_1 | Variant20_2 | Variant20_3 | Variant20_4 | Variant20_5 | Variant20_6 | Variant20_7 | Variant20_8 | Variant20_9;
type Type21 = Variant21_0 | Variant21_1 | Variant21_2 | Variant21_3 | Variant21_4 | Variant21_5 | Variant21_6 | Variant21_7 | Variant21_8 | Variant21_9;
type Type22 = Variant22_0 | Variant22_1 | Variant22_2 | Variant22_3 | Variant22_4 | Variant22_5 | Variant22_6 | Variant22_7 | Variant22_8 | Variant22_9;
type Type23 = Variant23_0 | Variant23_1 | Variant23_2 | Variant23_3 | Variant23_4 | Variant23_5 | Variant23_6 | Variant23_7 | Variant23_8 | Variant23_9;
type Type24 = Variant24_0 | Variant24_1 | Variant24_2 | Variant24_3 | Variant24_4 | Variant24_5 | Variant24_6 | Variant24_7 | Variant24_8 | Variant24_9;
type Type25 = Variant25_0 | Variant25_1 | Variant25_2 | Variant25_3 | Variant25_4 | Variant25_5 | Variant25_6 | Variant25_7 | Variant25_8 | Variant25_9;
type Type26 = Variant26_0 | Variant26_1 | Variant26_2 | Variant26_3 | Variant26_4 | Variant26_5 | Variant26_6 | Variant26_7 | Variant26_8 | Variant26_9;
type Type27 = Variant27_0 | Variant27_1 | Variant27_2 | Variant27_3 | Variant27_4 | Variant27_5 | Variant27_6 | Variant27_7 | Variant27_8 | Variant27_9;
type Type28 = Variant28_0 | Variant28_1 | Variant28_2 | Variant28_3 | Variant28_4 | Variant28_5 | Variant28_6 | Variant28_7 | Variant28_8 | Variant28_9;
type Type29 = Variant29_0 | Variant29_1 | Variant29_2 | Variant29_3 | Variant29_4 | Variant29_5 | Variant29_6 | Variant29_7 | Variant29_8 | Variant29_9;
type Type30 = Variant30_0 | Variant30_1 | Variant30_2 | Variant30_3 | Variant30_4 | Variant30_5 | Variant30_6 | Variant30_7 | Variant30_8 | Variant30_9;
type Type31 = Variant31_0 | Variant31_1 | Variant31_2 | Variant31_3 | Variant31_4 | Variant31_5 | Variant31_6 | Variant31_7 | Variant31_8 | Variant31_9;
type Type32 = Variant32_0 | Variant32_1 | Variant32_2 | Variant32_3 | Variant32_4 | Variant32_5 | Variant32_6 | Variant32_7 | Variant32_8 | Variant32_9;
type Type33 = Variant33_0 | Variant33_1 | Variant33_2 | Variant33_3 | Variant33_4 | Variant33_5 | Variant33_6 | Variant33_7 | Variant33_8 | Variant33_9;
type Type34 = Variant34_0 | Variant34_1 | Variant34_2 | Variant34_3 | Variant34_4 | Variant34_5 | Variant34_6 | Variant34_7 | Variant34_8 | Variant34_9;
type Type35 = Variant35_0 | Variant35_1 | Variant35_2 | Variant35_3 | Variant35_4 | Variant35_5 | Variant35_6 | Variant35_7 | Variant35_8 | Variant35_9;
type Type36 = Variant36_0 | Variant36_1 | Variant36_2 | Variant36_3 | Variant36_4 | Variant36_5 | Variant36_6 | Variant36_7 | Variant36_8 | Variant36_9;
type Type37 = Variant37_0 | Variant37_1 | Variant37_2 | Variant37_3 | Variant37_4 | Variant37_5 | Variant37_6 | Variant37_7 | Variant37_8 | Variant37_9;
type Type38 = Variant38_0 | Variant38_1 | Variant38_2 | Variant38_3 | Variant38_4 | Variant38_5 | Variant38_6 | Variant38_7 | Variant38_8 | Variant38_9;
type Type39 = Variant39_0 | Variant39_1 | Variant39_2 | Variant39_3 | Variant39_4 | Variant39_5 | Variant39_6 | Variant39_7 | Variant39_8 | Variant39_9;
type Type40 = Variant40_0 | Variant40_1 | Variant40_2 | Variant40_3 | Variant40_4 | Variant40_5 | Variant40_6 | Variant40_7 | Variant40_8 | Variant40_9;
type Type41 = Variant41_0 | Variant41_1 | Variant41_2 | Variant41_3 | Variant41_4 | Variant41_5 | Variant41_6 | Variant41_7 | Variant41_8 | Variant41_9;
type Type42 = Variant42_0 | Variant42_1 | Variant42_2 | Variant42_3 | Variant42_4 | Variant42_5 | Variant42_6 | Variant42_7 | Variant42_8 | Variant42_9;
type Type43 = Variant43_0 | Variant43_1 | Variant43_2 | Variant43_3 | Variant43_4 | Variant43_5 | Variant43_6 | Variant43_7 | Variant43_8 | Variant43_9;
type Type44 = Variant44_0 | Variant44_1 | Variant44_2 | Variant44_3 | Variant44_4 | Variant44_5 | Variant44_6 | Variant44_7 | Variant44_8 | Variant44_9;
type Type45 = Variant45_0 | Variant45_1 | Variant45_2 | Variant45_3 | Variant45_4 | Variant45_5 | Variant45_6 | Variant45_7 | Variant45_8 | Variant45_9;
type Type46 = Variant46_0 | Variant46_1 | Variant46_2 | Variant46_3 | Variant46_4 | Variant46_5 | Variant46_6 | Variant46_7 | Variant46_8 | Variant46_9;
type Type47 = Variant47_0 | Variant47_1 | Variant47_2 | Variant47_3 | Variant47_4 | Variant47_5 | Variant47_6 | Variant47_7 | Variant47_8 | Variant47_9;
type Type48 = Variant48_0 | Variant48_1 | Variant48_2 | Variant48_3 | Variant48_4 | Variant48_5 | Variant48_6 | Variant48_7 | Variant48_8 | Variant48_9;
type Type49 = Variant49_0 | Variant49_1 | Variant49_2 | Variant49_3 | Variant49_4 | Variant49_5 | Variant49_6 | Variant49_7 | Variant49_8 | Variant49_9;
type Type50 = Variant50_0 | Variant50_1 | Variant50_2 | Variant50_3 | Variant50_4 | Variant50_5 | Variant50_6 | Variant50_7 | Variant50_8 | Variant50_9;
type Type51 = Variant51_0 | Variant51_1 | Variant51_2 | Variant51_3 | Variant51_4 | Variant51_5 | Variant51_6 | Variant51_7 | Variant51_8 | Variant51_9;
type Type52 = Variant52_0 | Variant52_1 | Variant52_2 | Variant52_3 | Variant52_4 | Variant52_5 | Variant52_6 | Variant52_7 | Variant52_8 | Variant52_9;
type Type53 = Variant53_0 | Variant53_1 | Variant53_2 | Variant53_3 | Variant53_4 | Variant53_5 | Variant53_6 | Variant53_7 | Variant53_8 | Variant53_9;
type Type54 = Variant54_0 | Variant54_1 | Variant54_2 | Variant54_3 | Variant54_4 | Variant54_5 | Variant54_6 | Variant54_7 | Variant54_8 | Variant54_9;
type Type55 = Variant55_0 | Variant55_1 | Variant55_2 | Variant55_3 | Variant55_4 | Variant55_5 | Variant55_6 | Variant55_7 | Variant55_8 | Variant55_9;
type Type56 = Variant56_0 | Variant56_1 | Variant56_2 | Variant56_3 | Variant56_4 | Variant56_5 | Variant56_6 | Variant56_7 | Variant56_8 | Variant56_9;
type Type57 = Variant57_0 | Variant57_1 | Variant57_2 | Variant57_3 | Variant57_4 | Variant57_5 | Variant57_6 | Variant57_7 | Variant57_8 | Variant57_9;
type Type58 = Variant58_0 | Variant58_1 | Variant58_2 | Variant58_3 | Variant58_4 | Variant58_5 | Variant58_6 | Variant58_7 | Variant58_8 | Variant58_9;
type Type59 = Variant59_0 | Variant59_1 | Variant59_2 | Variant59_3 | Variant59_4 | Variant59_5 | Variant59_6 | Variant59_7 | Variant59_8 | Variant59_9;
type Type60 = Variant60_0 | Variant60_1 | Variant60_2 | Variant60_3 | Variant60_4 | Variant60_5 | Variant60_6 | Variant60_7 | Variant60_8 | Variant60_9;
type Type61 = Variant61_0 | Variant61_1 | Variant61_2 | Variant61_3 | Variant61_4 | Variant61_5 | Variant61_6 | Variant61_7 | Variant61_8 | Variant61_9;
type Type62 = Variant62_0 | Variant62_1 | Variant62_2 | Variant62_3 | Variant62_4 | Variant62_5 | Variant62_6 | Variant62_7 | Variant62_8 | Variant62_9;
type Type63 = Variant63_0 | Variant63_1 | Variant63_2 | Variant63_3 | Variant63_4 | Variant63_5 | Variant63_6 | Variant63_7 | Variant63_8 | Variant63_9;
type Type64 = Variant64_0 | Variant64_1 | Variant64_2 | Variant64_3 | Variant64_4 | Variant64_5 | Variant64_6 | Variant64_7 | Variant64_8 | Variant64_9;
type Type65 = Variant65_0 | Variant65_1 | Variant65_2 | Variant65_3 | Variant65_4 | Variant65_5 | Variant65_6 | Variant65_7 | Variant65_8 | Variant65_9;
type Type66 = Variant66_0 | Variant66_1 | Variant66_2 | Variant66_3 | Variant66_4 | Variant66_5 | Variant66_6 | Variant66_7 | Variant66_8 | Variant66_9;
type Type67 = Variant67_0 | Variant67_1 | Variant67_2 | Variant67_3 | Variant67_4 | Variant67_5 | Variant67_6 | Variant67_7 | Variant67_8 | Variant67_9;
type Type68 = Variant68_0 | Variant68_1 | Variant68_2 | Variant68_3 | Variant68_4 | Variant68_5 | Variant68_6 | Variant68_7 | Variant68_8 | Variant68_9;
type Type69 = Variant69_0 | Variant69_1 | Variant69_2 | Variant69_3 | Variant69_4 | Variant69_5 | Variant69_6 | Variant69_7 | Variant69_8 | Variant69_9;
type Type70 = Variant70_0 | Variant70_1 | Variant70_2 | Variant70_3 | Variant70_4 | Variant70_5 | Variant70_6 | Variant70_7 | Variant70_8 | Variant70_9;
type Type71 = Variant71_0 | Variant71_1 | Variant71_2 | Variant71_3 | Variant71_4 | Variant71_5 | Variant71_6 | Variant71_7 | Variant71_8 | Variant71_9;
type Type72 = Variant72_0 | Variant72_1 | Variant72_2 | Variant72_3 | Variant72_4 | Variant72_5 | Variant72_6 | Variant72_7 | Variant72_8 | Variant72_9;
type Type73 = Variant73_0 | Variant73_1 | Variant73_2 | Variant73_3 | Variant73_4 | Variant73_5 | Variant73_6 | Variant73_7 | Variant73_8 | Variant73_9;
type Type74 = Variant74_0 | Variant74_1 | Variant74_2 | Variant74_3 | Variant74_4 | Variant74_5 | Variant74_6 | Variant74_7 | Variant74_8 | Variant74_9;
type Type75 = Variant75_0 | Variant75_1 | Variant75_2 | Variant75_3 | Variant75_4 | Variant75_5 | Variant75_6 | Variant75_7 | Variant75_8 | Variant75_9;
type Type76 = Variant76_0 | Variant76_1 | Variant76_2 | Variant76_3 | Variant76_4 | Variant76_5 | Variant76_6 | Variant76_7 | Variant76_8 | Variant76_9;
type Type77 = Variant77_0 | Variant77_1 | Variant77_2 | Variant77_3 | Variant77_4 | Variant77_5 | Variant77_6 | Variant77_7 | Variant77_8 | Variant77_9;
type Type78 = Variant78_0 | Variant78_1 | Variant78_2 | Variant78_3 | Variant78_4 | Variant78_5 | Variant78_6 | Variant78_7 | Variant78_8 | Variant78_9;
type Type79 = Variant79_0 | Variant79_1 | Variant79_2 | Variant79_3 | Variant79_4 | Variant79_5 | Variant79_6 | Variant79_7 | Variant79_8 | Variant79_9;
type Type80 = Variant80_0 | Variant80_1 | Variant80_2 | Variant80_3 | Variant80_4 | Variant80_5 | Variant80_6 | Variant80_7 | Variant80_8 | Variant80_9;
type Type81 = Variant81_0 | Variant81_1 | Variant81_2 | Variant81_3 | Variant81_4 | Variant81_5 | Variant81_6 | Variant81_7 | Variant81_8 | Variant81_9;
type Type82 = Variant82_0 | Variant82_1 | Variant82_2 | Variant82_3 | Variant82_4 | Variant82_5 | Variant82_6 | Variant82_7 | Variant82_8 | Variant82_9;
type Type83 = Variant83_0 | Variant83_1 | Variant83_2 | Variant83_3 | Variant83_4 | Variant83_5 | Variant83_6 | Variant83_7 | Variant83_8 | Variant83_9;
type Type84 = Variant84_0 | Variant84_1 | Variant84_2 | Variant84_3 | Variant84_4 | Variant84_5 | Variant84_6 | Variant84_7 | Variant84_8 | Variant84_9;
type Type85 = Variant85_0 | Variant85_1 | Variant85_2 | Variant85_3 | Variant85_4 | Variant85_5 | Variant85_6 | Variant85_7 | Variant85_8 | Variant85_9;
type Type86 = Variant86_0 | Variant86_1 | Variant86_2 | Variant86_3 | Variant86_4 | Variant86_5 | Variant86_6 | Variant86_7 | Variant86_8 | Variant86_9;
type Type87 = Variant87_0 | Variant87_1 | Variant87_2 | Variant87_3 | Variant87_4 | Variant87_5 | Variant87_6 | Variant87_7 | Variant87_8 | Variant87_9;
type Type88 = Variant88_0 | Variant88_1 | Variant88_2 | Variant88_3 | Variant88_4 | Variant88_5 | Variant88_6 | Variant88_7 | Variant88_8 | Variant88_9;
type Type89 = Variant89_0 | Variant89_1 | Variant89_2 | Variant89_3 | Variant89_4 | Variant89_5 | Variant89_6 | Variant89_7 | Variant89_8 | Variant89_9;
type Type90 = Variant90_0 | Variant90_1 | Variant90_2 | Variant90_3 | Variant90_4 | Variant90_5 | Variant90_6 | Variant90_7 | Variant90_8 | Variant90_9;
type Type91 = Variant91_0 | Variant91_1 | Variant91_2 | Variant91_3 | Variant91_4 | Variant91_5 | Variant91_6 | Variant91_7 | Variant91_8 | Variant91_9;
type Type92 = Variant92_0 | Variant92_1 | Variant92_2 | Variant92_3 | Variant92_4 | Variant92_5 | Variant92_6 | Variant92_7 | Variant92_8 | Variant92_9;
type Type93 = Variant93_0 | Variant93_1 | Variant93_2 | Variant93_3 | Variant93_4 | Variant93_5 | Variant93_6 | Variant93_7 | Variant93_8 | Variant93_9;
type Type94 = Variant94_0 | Variant94_1 | Variant94_2 | Variant94_3 | Variant94_4 | Variant94_5 | Variant94_6 | Variant94_7 | Variant94_8 | Variant94_9;
type Type95 = Variant95_0 | Variant95_1 | Variant95_2 | Variant95_3 | Variant95_4 | Variant95_5 | Variant95_6 | Variant95_7 | Variant95_8 | Variant95_9;
type Type96 = Variant96_0 | Variant96_1 | Variant96_2 | Variant96_3 | Variant96_4 | Variant96_5 | Variant96_6 | Variant96_7 | Variant96_8 | Variant96_9;
type Type97 = Variant97_0 | Variant97_1 | Variant97_2 | Variant97_3 | Variant97_4 | Variant97_5 | Variant97_6 | Variant97_7 | Variant97_8 | Variant97_9;
type Type98 = Variant98_0 | Variant98_1 | Variant98_2 | Variant98_3 | Variant98_4 | Variant98_5 | Variant98_6 | Variant98_7 | Variant98_8 | Variant98_9;
type Type99 = Variant99_0 | Variant99_1 | Variant99_2 | Variant99_3 | Variant99_4 | Variant99_5 | Variant99_6 | Variant99_7 | Variant99_8 | Variant99_9;

func0 = fn x => match x with (Variant0_0 => 0; Variant0_1 => 1; Variant0_2 => 2; Variant0_3 => 3; Variant0_4 => 4);
func1 = fn x => match x with (Variant1_0 => 0; Variant1_1 => 1; Variant1_2 => 2; Variant1_3 => 3; Variant1_4 => 4);
func2 = fn x => match x with (Variant2_0 => 0; Variant2_1 => 1; Variant2_2 => 2; Variant2_3 => 3; Variant2_4 => 4);
func3 = fn x => match x with (Variant3_0 => 0; Variant3_1 => 1; Variant3_2 => 2; Variant3_3 => 3; Variant3_4 => 4);
func4 = fn x => match x with (Variant4_0 => 0; Variant4_1 => 1; Variant4_2 => 2; Variant4_3 => 3; Variant4_4 => 4);
func5 = fn x => match x with (Variant5_0 => 0; Variant5_1 => 1; Variant5_2 => 2; Variant5_3 => 3; Variant5_4 => 4);
func6 = fn x => match x with (Variant6_0 => 0; Variant6_1 => 1; Variant6_2 => 2; Variant6_3 => 3; Variant6_4 => 4);
func7 = fn x => match x with (Variant7_0 => 0; Variant7_1 => 1; Variant7_2 => 2; Variant7_3 => 3; Variant7_4 => 4);
func8 = fn x => match x with (Variant8_0 => 0; Variant8_1 => 1; Variant8_2 => 2; Variant8_3 => 3; Variant8_4 => 4);
func9 = fn x => match x with (Variant9_0 => 0; Variant9_1 => 1; Variant9_2 => 2; Variant9_3 => 3; Variant9_4 => 4);
func10 = fn x => match x with (Variant10_0 => 0; Variant10_1 => 1; Variant10_2 => 2; Variant10_3 => 3; Variant10_4 => 4);
func11 = fn x => match x with (Variant11_0 => 0; Variant11_1 => 1; Variant11_2 => 2; Variant11_3 => 3; Variant11_4 => 4);
func12 = fn x => match x with (Variant12_0 => 0; Variant12_1 => 1; Variant12_2 => 2; Variant12_3 => 3; Variant12_4 => 4);
func13 = fn x => match x with (Variant13_0 => 0; Variant13_1 => 1; Variant13_2 => 2; Variant13_3 => 3; Variant13_4 => 4);
func14 = fn x => match x with (Variant14_0 => 0; Variant14_1 => 1; Variant14_2 => 2; Variant14_3 => 3; Variant14_4 => 4);
func15 = fn x => match x with (Variant15_0 => 0; Variant15_1 => 1; Variant15_2 => 2; Variant15_3 => 3; Variant15_4 => 4);
func16 = fn x => match x with (Variant16_0 => 0; Variant16_1 => 1; Variant16_2 => 2; Variant16_3 => 3; Variant16_4 => 4);
func17 = fn x => match x with (Variant17_0 => 0; Variant17_1 => 1; Variant17_2 => 2; Variant17_3 => 3; Variant17_4 => 4);
func18 = fn x => match x with (Variant18_0 => 0; Variant18_1 => 1; Variant18_2 => 2; Variant18_3 => 3; Variant18_4 => 4);
func19 = fn x => match x with (Variant19_0 => 0; Variant19_1 => 1; Variant19_2 => 2; Variant19_3 => 3; Variant19_4 => 4);
func20 = fn x => match x with (Variant20_0 => 0; Variant20_1 => 1; Variant20_2 => 2; Variant20_3 => 3; Variant20_4 => 4);
func21 = fn x => match x with (Variant21_0 => 0; Variant21_1 => 1; Variant21_2 => 2; Variant21_3 => 3; Variant21_4 => 4);
func22 = fn x => match x with (Variant22_0 => 0; Variant22_1 => 1; Variant22_2 => 2; Variant22_3 => 3; Variant22_4 => 4);
func23 = fn x => match x with (Variant23_0 => 0; Variant23_1 => 1; Variant23_2 => 2; Variant23_3 => 3; Variant23_4 => 4);
func24 = fn x => match x with (Variant24_0 => 0; Variant24_1 => 1; Variant24_2 => 2; Variant24_3 => 3; Variant24_4 => 4);
func25 = fn x => match x with (Variant25_0 => 0; Variant25_1 => 1; Variant25_2 => 2; Variant25_3 => 3; Variant25_4 => 4);
func26 = fn x => match x with (Variant26_0 => 0; Variant26_1 => 1; Variant26_2 => 2; Variant26_3 => 3; Variant26_4 => 4);
func27 = fn x => match x with (Variant27_0 => 0; Variant27_1 => 1; Variant27_2 => 2; Variant27_3 => 3; Variant27_4 => 4);
func28 = fn x => match x with (Variant28_0 => 0; Variant28_1 => 1; Variant28_2 => 2; Variant28_3 => 3; Variant28_4 => 4);
func29 = fn x => match x with (Variant29_0 => 0; Variant29_1 => 1; Variant29_2 => 2; Variant29_3 => 3; Variant29_4 => 4);
func30 = fn x => match x with (Variant30_0 => 0; Variant30_1 => 1; Variant30_2 => 2; Variant30_3 => 3; Variant30_4 => 4);
func31 = fn x => match x with (Variant31_0 => 0; Variant31_1 => 1; Variant31_2 => 2; Variant31_3 => 3; Variant31_4 => 4);
func32 = fn x => match x with (Variant32_0 => 0; Variant32_1 => 1; Variant32_2 => 2; Variant32_3 => 3; Variant32_4 => 4);
func33 = fn x => match x with (Variant33_0 => 0; Variant33_1 => 1; Variant33_2 => 2; Variant33_3 => 3; Variant33_4 => 4);
func34 = fn x => match x with (Variant34_0 => 0; Variant34_1 => 1; Variant34_2 => 2; Variant34_3 => 3; Variant34_4 => 4);
func35 = fn x => match x with (Variant35_0 => 0; Variant35_1 => 1; Variant35_2 => 2; Variant35_3 => 3; Variant35_4 => 4);
func36 = fn x => match x with (Variant36_0 => 0; Variant36_1 => 1; Variant36_2 => 2; Variant36_3 => 3; Variant36_4 => 4);
func37 = fn x => match x with (Variant37_0 => 0; Variant37_1 => 1; Variant37_2 => 2; Variant37_3 => 3; Variant37_4 => 4);
func38 = fn x => match x with (Variant38_0 => 0; Variant38_1 => 1; Variant38_2 => 2; Variant38_3 => 3; Variant38_4 => 4);
func39 = fn x => match x with (Variant39_0 => 0; Variant39_1 => 1; Variant39_2 => 2; Variant39_3 => 3; Variant39_4 => 4);
func40 = fn x => match x with (Variant40_0 => 0; Variant40_1 => 1; Variant40_2 => 2; Variant40_3 => 3; Variant40_4 => 4);
func41 = fn x => match x with (Variant41_0 => 0; Variant41_1 => 1; Variant41_2 => 2; Variant41_3 => 3; Variant41_4 => 4);
func42 = fn x => match x with (Variant42_0 => 0; Variant42_1 => 1; Variant42_2 => 2; Variant42_3 => 3; Variant42_4 => 4);
func43 = fn x => match x with (Variant43_0 => 0; Variant43_1 => 1; Variant43_2 => 2; Variant43_3 => 3; Variant43_4 => 4);
func44 = fn x => match x with (Variant44_0 => 0; Variant44_1 => 1; Variant44_2 => 2; Variant44_3 => 3; Variant44_4 => 4);
func45 = fn x => match x with (Variant45_0 => 0; Variant45_1 => 1; Variant45_2 => 2; Variant45_3 => 3; Variant45_4 => 4);
func46 = fn x => match x with (Variant46_0 => 0; Variant46_1 => 1; Variant46_2 => 2; Variant46_3 => 3; Variant46_4 => 4);
func47 = fn x => match x with (Variant47_0 => 0; Variant47_1 => 1; Variant47_2 => 2; Variant47_3 => 3; Variant47_4 => 4);
func48 = fn x => match x with (Variant48_0 => 0; Variant48_1 => 1; Variant48_2 => 2; Variant48_3 => 3; Variant48_4 => 4);
func49 = fn x => match x with (Variant49_0 => 0; Variant49_1 => 1; Variant49_2 => 2; Variant49_3 => 3; Variant49_4 => 4);

# Simple result
42